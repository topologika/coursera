git clone /путь/к/репозиторию

git clone https://topologika@bitbucket.org/topologika/2017-kursap.git

git clone юзер@хост:/путь/к/репозиторию
git add <имя_файла>
git commit -m "Описание коммита"
git push origin master
git remote add origin <адрес_сервера>
    Создать новую ветку с названием "feature_x" и переключиться на неё можно командой
git checkout -b feature_x
    переключиться обратно на master
git checkout master
    удалить ветку
git branch -d feature_x
    ветка не будет доступна тем, кто пользуется с вами удаленным репозиторием пока вы не отправите её туда
git push origin <имя_ветки>
git pull
    Для того чтобы слить другую ветку с активной (например master), используйте команду
git merge <имя_ветки>
    перед слиянием вы можете предварительно посмотреть на изменения
git diff <имя_ветки> <имя_другой_ветки>
метки
Рекомендуется использовать метки для закрепления момента выпуска версий. Это популярная практика, которая так же используется в SVN. Создать новую метку с именем 1.0.0 можно выполнив
git tag 1.0.0 1b2e1d63ff
1b2e1d63ff это первые десять цифр уникального идентификатора (id) с которым будет связана метка. Чтобы посмотреть идентификаторы коммитов, выполните
git log
Можно использовать меньшее количество символов в качестве идентификатора с учетом того что он является уникальным.
замена локальных изменений
В случае если вы сделали что-то не то, вы можете заменить локальные изменения, используя команду
git checkout -- <имя_файла>
произойдет замена изменений в вашем рабочем каталоге, на то что сейчас находится в HEAD. Изменения уже внесенные в индекс, так же как новые файлы будут сохранены.

Если же вы хотите удалить все ваши локальные изменения и коммиты, получите (fetch) последние изменения с сервера и укажите локальной ветке master на них вот так
git fetch origin
git reset --hard origin/master

твики и удобные команды
встроенный в git графический интерфейс
gitk
использовать цветной вывод в терминале
git config color.ui true
выводить в логе коммит на одной строке
git config format.pretty oneline
интерактивный способ добавления в индекс
git add -i

Посмотреть, что такое origin и мастер
git remote -v 
